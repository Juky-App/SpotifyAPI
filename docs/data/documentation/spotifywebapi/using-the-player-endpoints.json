{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When performing a player command that is restricted, "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError"},{"text":" will be returned.  It contains the following properties:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/message","isActive":true,"type":"reference"},{"type":"text","text":": A short description of the cause of the error."}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/reason","isActive":true,"type":"reference"},{"text":": A player error reason.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/statusCode"},{"type":"text","text":": The HTTP status code that is also returned in the response header."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unfortunately, there is a bug at the moment with the Spotify web API in which  "},{"type":"reference","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/unknown","isActive":true},{"text":" is return in cases where a more specific error would be expected. For example, trying to skip to the previous track when there is no previous track in the context returns this error instead of ","type":"text"},{"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/noPreviousTrack","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"heading","level":2,"anchor":"Player-command-failed-No-active-device-found","text":"“Player command failed: No active device found”"},{"inlineContent":[{"text":"Just because you have a Spotify client (e.g., the mobile app, the desktop application, or the web player) open does not necessarily mean it is considered an ","type":"text"},{"inlineContent":[{"text":"active","type":"text"}],"type":"emphasis"},{"text":" device, it just means that device is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"available","type":"text"}]},{"text":". When content is playing on a device, it is considered active. When playback ceases on a device, it typically becomes inactive only a few minutes later.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"While your program is running, you can use the ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.spotify.com\/console\/get-users-available-devices\/"},{"text":" on the Spotify web API console—as well as the ","type":"text"},{"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/availableDevices()","type":"reference","isActive":true},{"text":" method in this library—to check which devices are active and\/or available.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For most player endpoints that accept a ","type":"text"},{"type":"codeVoice","code":"deviceId"},{"type":"text","text":" parameter, if you provide "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" (which is the default), then the active device is targeted. If there is no "},{"type":"emphasis","inlineContent":[{"type":"text","text":"active"}]},{"type":"text","text":" device, then the request will fail (even if there are "},{"type":"emphasis","inlineContent":[{"text":"available","type":"text"}]},{"text":" devices) because it isn’t clear which device should be targeted for the command. Furthermore, providing the id of a non-active device will also cause the request to fail. In both cases, you must call ","type":"text"},{"type":"reference","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/transferPlayback(to:play:)","isActive":true},{"type":"text","text":" first in order to transfer playback to an available device, thereby making it active. On exception to the latter rule is the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/play(_:deviceId:)"},{"type":"text","text":" endpoint, which "},{"inlineContent":[{"text":"does","type":"text"}],"type":"emphasis"},{"type":"text","text":" allow you to provide the id of a non-active device, even if there is currently an active device. Calling this endpoint with a non-active device will automatically transfer playback to that device, thereby making it active."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Below is a helper method for playing content on either the active device or the first available device found. It reduces the complexity of working with the "},{"type":"reference","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/play(_:deviceId:)","isActive":true},{"type":"text","text":" endpoint."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["extension SpotifyAPI where AuthorizationManager: SpotifyScopeAuthorizationManager {","","    \/**","     Makes a call to `availableDevices()` and plays the content on the","     active device if one exists. Else, plays content on the first available","     device.","     ","     - Parameter playbackRequest: A request to play content.","     *\/","    func getAvailableDeviceThenPlay(","        _ playbackRequest: PlaybackRequest","    ) -> AnyPublisher<Void, Error> {","        ","        return self.availableDevices().flatMap {","            devices -> AnyPublisher<Void, Error> in","    ","            \/\/ A device must have an id and must not be restricted","            \/\/ in order to accept web API commands.","            let usableDevices = devices.filter { device in","                !device.isRestricted && device.id != nil","            }","","            \/\/ If there is an active device, then it's usually a good idea","            \/\/ to use that one. For example, if content is already playing,","            \/\/ then it will be playing on the active device. If not, then","            \/\/ just use the first available device.","            let device = usableDevices.first(where: \\.isActive)","                    ?? usableDevices.first","            ","            if let deviceId = device?.id {","                return self.play(playbackRequest, deviceId: deviceId)","            }","            else {","                return SpotifyGeneralError.other(","                    \"no active or available devices\",","                    localizedDescription:","                    \"There are no devices available to play content on. \" +","                    \"Try opening the Spotify app on one of your devices.\"","                )","                .anyFailingPublisher()","            }","            ","        }","        .eraseToAnyPublisher()","        ","    }","","}"]},{"type":"heading","level":2,"text":"Playback Request Examples","anchor":"Playback-Request-Examples"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play a single track with playback starting at 10 seconds:"}]}],"type":"paragraph"},{"type":"codeListing","code":["let track = \"spotify:track:6jvqaaUtBmcnxQnf5XKzFo\"","let playbackRequest = PlaybackRequest(track, positionMS: 10_000)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also provide an episode URI to this initializer."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play a playlist:"}]}]},{"syntax":"swift","type":"codeListing","code":["let playlist = \"spotify:playlist:37i9dQZF1DXaQ34lqGBfrU\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(playlist),","    offset: nil",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first track that plays will depend on the user’s shuffle state."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play a playlist starting at the second track:"}]}]},{"code":["let playlist = \"spotify:playlist:37i9dQZF1DXaQ34lqGBfrU\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(playlist),","    offset: .position(1)  \/\/ The offset is zero-indexed",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Play an album starting with a specific track:","type":"text"}]}],"type":"paragraph"},{"type":"codeListing","code":["let album = \"spotify:album:6QaVfG1pHYl1z15ZxkvVDW\"","let track = \"spotify:track:0xIuNHHcKI1JDuBPlSwzb1\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(album),","    offset: .uri(track)",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Play a list of tracks:"}],"type":"strong"}]},{"code":["let tracks = [","    \"spotify:track:7JIV9UYKpti5xWgq6lfNNJ\",  \/\/ Ode to Viceroy","    \"spotify:track:1jhtxc7ON8ZzgvWGPwWXUN\",  \/\/ Baby Blue","    \"spotify:track:3JLrri1xSCui3bzITDJbkk\",  \/\/ The Rain Song","    \"spotify:track:6dsq7Nt5mIFzvm5kIYNORy\"   \/\/ 15 Step","]","","let playbackRequest = PlaybackRequest(","    context: .uris(tracks),","    offset: nil",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Play an episode within the the context of a show starting at 10 minutes:"}]}],"type":"paragraph"},{"code":["let show = \"spotify:show:4rOoJ6Egrf8K2IrywzwOMk\"","let episode = \"spotify:episode:1saFhnv5h33EWizm2yKECl\"","","let playbackRequest = PlaybackRequest(","    context: .contextURI(show),","    offset: .uri(episode),","    positionMS: 600_000",")"],"syntax":"swift","type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI"],["doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI"]]},"abstract":[{"type":"text","text":"Use the SpotifyAPI player endpoints."}],"variants":[{"paths":["\/documentation\/spotifywebapi\/using-the-player-endpoints"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Saving-the-Authorization-Information-to-Persistent-Storage","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Working-with-Paginated-Results","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Debugging","doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Running-the-Unit-Tests"],"generated":true}],"kind":"article","identifier":{"url":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Using-the-Player-Endpoints","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Article","role":"article","title":"Using the Player Endpoints","modules":[{"name":"SpotifyWebAPI"}]},"references":{"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/ErrorReason/noPreviousTrack":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"noPreviousTrack"}],"title":"SpotifyPlayerError.ErrorReason.noPreviousTrack","kind":"symbol","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/errorreason\/noprevioustrack","abstract":[{"type":"text","text":"The command requires a previous track, but there is none in the"},{"text":" ","type":"text"},{"text":"context.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/noPreviousTrack"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Working-with-Paginated-Results":{"abstract":[{"text":"Retrieve additional pages from an endpoint that returns paginated results.","type":"text"}],"url":"\/documentation\/spotifywebapi\/working-with-paginated-results","title":"Working with Paginated Results","role":"article","type":"topic","kind":"article","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Working-with-Paginated-Results"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/reason":{"role":"symbol","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/reason","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"reason","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SpotifyPlayerError","preciseIdentifier":"s:13SpotifyWebAPI0A11PlayerErrorV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:13SpotifyWebAPI0A11PlayerErrorV0E6ReasonO","text":"ErrorReason","kind":"typeIdentifier"}],"title":"reason","abstract":[{"type":"text","text":"A player error reason."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/reason","kind":"symbol","type":"topic"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI/play(_:deviceId:)":{"title":"play(_:deviceId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"play"},{"kind":"text","text":"("},{"text":"PlaybackRequest","kind":"typeIdentifier","preciseIdentifier":"s:13SpotifyWebAPI15PlaybackRequestV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"deviceId"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"url":"\/documentation\/spotifywebapi\/spotifyapi\/play(_:deviceid:)","conformance":{"constraints":[{"type":"codeVoice","code":"AuthorizationManager"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"SpotifyScopeAuthorizationManager"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Play content for the current user."}],"type":"topic","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/play(_:deviceId:)","role":"symbol","kind":"symbol"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Debugging":{"abstract":[{"text":"Debug issues and configure logging.","type":"text"}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Debugging","type":"topic","url":"\/documentation\/spotifywebapi\/debugging","kind":"article","role":"article","title":"Debugging"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/ErrorReason/unknown":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unknown"}],"title":"SpotifyPlayerError.ErrorReason.unknown","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/errorreason\/unknown","abstract":[{"type":"text","text":"Certain actions are restricted because of unknown reasons."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/ErrorReason\/unknown"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI/availableDevices()":{"abstract":[{"type":"text","text":"Get the user’s available devices."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/availableDevices()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"availableDevices"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"kind":"typeIdentifier","text":"Device","preciseIdentifier":"s:13SpotifyWebAPI6DeviceV"},{"kind":"text","text":"], any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyapi\/availabledevices()","title":"availableDevices()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"AuthorizationManager","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"SpotifyScopeAuthorizationManager","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError":{"title":"SpotifyPlayerError","url":"\/documentation\/spotifywebapi\/spotifyplayererror","type":"topic","kind":"symbol","identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError","abstract":[{"type":"text","text":"The Spotify player error object. This is returned when making requests"},{"type":"text","text":" "},{"type":"text","text":"related to the player endpoints."}],"role":"symbol","navigatorTitle":[{"text":"SpotifyPlayerError","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SpotifyPlayerError"}]},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Saving-the-Authorization-Information-to-Persistent-Storage":{"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Saving-the-Authorization-Information-to-Persistent-Storage","url":"\/documentation\/spotifywebapi\/saving-the-authorization-information-to-persistent-storage","role":"article","kind":"article","title":"Saving the Authorization Information to Persistent Storage","type":"topic","abstract":[{"type":"text","text":"Save the authorization information to persistent storage so that the user does not have to login again every time the application is quit and re-launched."}]},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/statusCode":{"role":"symbol","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/statuscode","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"statusCode","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"statusCode","type":"topic","abstract":[{"type":"text","text":"The HTTP status code that is also returned in the response header."}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/statusCode","kind":"symbol"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI/transferPlayback(to:play:)":{"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI\/transferPlayback(to:play:)","abstract":[{"type":"text","text":"Transfer the user’s playback to a different device."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transferPlayback","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"play","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier","text":"AnyPublisher"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/spotifywebapi\/spotifyapi\/transferplayback(to:play:)","title":"transferPlayback(to:play:)","conformance":{"constraints":[{"type":"codeVoice","code":"AuthorizationManager"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"SpotifyScopeAuthorizationManager"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/Running-the-Unit-Tests":{"abstract":[{"text":"Run the unit tests and ensure your backend server is correctly configured.","type":"text"}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/Running-the-Unit-Tests","type":"topic","url":"\/documentation\/spotifywebapi\/running-the-unit-tests","kind":"article","role":"article","title":"Running the Unit Tests"},"https://developer.spotify.com/console/get-users-available-devices/":{"title":"available devices endpoint","titleInlineContent":[{"text":"available devices endpoint","type":"text"}],"type":"link","identifier":"https:\/\/developer.spotify.com\/console\/get-users-available-devices\/","url":"https:\/\/developer.spotify.com\/console\/get-users-available-devices\/"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyPlayerError/message":{"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"message"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyPlayerError\/message","kind":"symbol","url":"\/documentation\/spotifywebapi\/spotifyplayererror\/message","title":"message","type":"topic","abstract":[{"type":"text","text":"A short description of the cause of the error."}]},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI/SpotifyAPI":{"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI\/SpotifyAPI","abstract":[{"text":"The central class in this library. Provides methods for all of the Spotify web","type":"text"},{"type":"text","text":" "},{"type":"text","text":"API endpoints and contains an authorization manager for managing the"},{"text":" ","type":"text"},{"type":"text","text":"authorization process of your application."}],"navigatorTitle":[{"text":"SpotifyAPI","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SpotifyAPI"}],"kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi\/spotifyapi","role":"symbol","title":"SpotifyAPI"},"doc://SpotifyWebAPI/documentation/SpotifyWebAPI":{"abstract":[{"text":"A Swift library for the Spotify web API","type":"text"}],"identifier":"doc:\/\/SpotifyWebAPI\/documentation\/SpotifyWebAPI","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/spotifywebapi","title":"SpotifyWebAPI"}}}